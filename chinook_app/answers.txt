
1) Find the albums recorded by the artist Queen.

Artist.where name:"Queen"
  Artist Load (1.1ms)  SELECT  "artists".* FROM "artists" WHERE "artists"."name" = $1 LIMIT $2  [["name", "Queen"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Artist id: 51, name: "Queen", created_at: "2006-01-08 22:57:01", updated_at: "2014-01-29 22:10:22">]>

Album.where artist_id:51
  Album Load (0.7ms)  SELECT  "albums".* FROM "albums" WHERE "albums"."artist_id" = $1 LIMIT $2  [["artist_id", 51], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Album id: 36, artist_id: 51, title: "Greatest Hits II", created_at: "2008-01-30 14:00:12", updated_at: "2014-01-29 22:14:02">, #<Album id: 185, artist_id: 51, title: "Greatest Hits I", created_at: "2007-12-29 12:02:13", updated_at: "2014-01-29 22:14:02">, #<Album id: 186, artist_id: 51, title: "News Of The World", created_at: "2010-06-23 20:50:06", updated_at: "2014-01-29 22:14:02">]>
irb(main):007:0> 

2) Count how many tracks belong to the media type "Protected MPEG-4 video file".

MediaType.where name:"Protected MPEG-4 video file"
  MediaType Load (0.7ms)  SELECT  "media_types".* FROM "media_types" WHERE "media_types"."name" = $1 LIMIT $2  [["name", "Protected MPEG-4 video file"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<MediaType id: 3, name: "Protected MPEG-4 video file", created_at: "2007-12-07 13:17:17", updated_at: "2014-01-29 22:14:22">]>

Track.where(media_type_id:3).count
   (3.2ms)  SELECT COUNT(*) FROM "tracks" WHERE "tracks"."media_type_id" = $1  [["media_type_id", 3]]
=> 214

3) Find the genre with the name "Hip Hop/Rap" 

Genre.where name:"Hip Hop/Rap"           
  Genre Load (9.0ms)  SELECT  "genres".* FROM "genres" WHERE "genres"."name" = $1 LIMIT $2  [["name", "Hip Hop/Rap"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Genre id: 17, name: "Hip Hop/Rap", created_at: "2013-01-20 02:04:31", updated_at: "2014-01-29 22:14:08">]>

4) Count how many tracks belong to the "Hip Hop/Rap" genre

Track.where(genre_id:17).count
   (1.9ms)  SELECT COUNT(*) FROM "tracks" WHERE "tracks"."genre_id" = $1  [["genre_id", 17]]
=> 35


5) Find the total amount of time required to listen to all the tracks in the database.

Track.sum("milliseconds")
   (3.5ms)  SELECT SUM("tracks"."milliseconds") FROM "tracks"
=> 1378575827

=> 22976263 seconds

=> 382937 minutes

=> 6382 hours

=> 265 days


6) Find the highest price of any track that has the media type "MPEG audio file".

MediaType.where(name:"MPEG audio file")
  MediaType Load (0.8ms)  SELECT  "media_types".* FROM "media_types" WHERE "media_types"."name" = $1 LIMIT $2  [["name", "MPEG audio file"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<MediaType id: 1, name: "MPEG audio file", created_at: "2006-11-24 08:21:33", updated_at: "2014-01-29 22:14:22">]>

Track.where(media_type_id:1).maximum("unit_price")
   (4.3ms)  SELECT MAX("tracks"."unit_price") FROM "tracks" WHERE "tracks"."media_type_id" = $1  [["media_type_id", 1]]
=> 0.99e0

7) Find the name of the most expensive track that has the media type "MPEG audio file".

Track.where(unit_price:0.99e0).where(media_type_id:1).pluck(:name)

*ALL HAVE THE SAME PRICE!!!


8) Find the 2 oldest artists.

Artist.order(created_at: :desc).limit(2)
  Artist Load (0.8ms)  SELECT  "artists".* FROM "artists" ORDER BY "artists"."created_at" DESC LIMIT $1  [["LIMIT", 2]]
=> #<ActiveRecord::Relation [#<Artist id: 187, name: "Los Hermanos", created_at: "2014-01-17 12:58:54", updated_at: "2014-01-29 22:10:22">, #<Artist id: 41, name: "Elis Regina", created_at: "2014-01-07 04:35:27", updated_at: "2014-01-29 22:10:22">]>


9) Find the least expensive track that has the genre "Electronica/Dance".

Genre.where name:"Electronica/Dance"
  Genre Load (0.7ms)  SELECT  "genres".* FROM "genres" WHERE "genres"."name" = $1 LIMIT $2  [["name", "Electronica/Dance"], ["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Genre id: 15, name: "Electronica/Dance", created_at: "2008-05-25 12:13:42", updated_at: "2014-01-29 22:14:08">]>

Track.where(genre_id:15).order(created_at: :asc).limit(1)
  Track Load (1.4ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."genre_id" = $1 ORDER BY "tracks"."created_at" ASC LIMIT $2  [["genre_id", 15], ["LIMIT", 1]]
=> #<ActiveRecord::Relation [#<Track id: 3319, album_id: 259, genre_id: 15, media_type_id: 1, name: "Instinto Colectivo", composer: nil, milliseconds: 300564, bytes: 12024875, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">]>

10) Find all "MPEG audio file" tracks in the genre "Electronica/Dance".

Track.where(genre_id:15).where(media_type_id:1).pluck(:name)
   (2.6ms)  SELECT "tracks"."name" FROM "tracks" WHERE "tracks"."genre_id" = $1 AND "tracks"."media_type_id" = $2  [["genre_id", 15], ["media_type_id", 1]]
=> ["Instinto Colectivo", "Chapa o Coco", "Prostituta", "Eu So Queria Sumir", "Tres Reis", "Um Lugar ao Sol", "Batalha Naval", "O Misterio do Samba", "Armadura", "Na Ladeira", "Carimbo", "Catimbo", "Chega no Suingue", "Mun-Ra", "Freestyle Love", "Stillness In Time", "Journey To Arnhemland", "Just Another Story", "Todo o Carnaval tem seu Fim", "Funk de Bamba", "Half The Man", "Light Years", "Manifest Destiny", "The Kids", "Mr. Moon", "Scam", "Morning Glory", "Space Cowboy"]

